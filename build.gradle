/*
 * Copyright 2018, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */


buildscript {
    apply from: 'version.gradle'
    apply from: "$rootDir/config/gradle/dependencies.gradle"

    repositories {
        jcenter()
        maven { url = repos.gradlePlugins }
        maven { url = repos.spine }
        maven { url = repos.spineSnapshots }
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath deps.build.guava
        classpath deps.build.gradlePlugins.errorProne
        classpath deps.build.gradlePlugins.protobuf
        classpath "io.spine.tools:spine-model-compiler:$spineBaseVersion"
    }
}

ext {
    projectsToPublish = ['firebase-mirror']
}

allprojects {
    apply from: "$rootDir/version.gradle"
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'idea'

    group = 'io.spine'
    version = spineVersion
}

subprojects {
    project.ext {
        sourcesRootDir = "${projectDir}/src"
        generatedRootDir = "${projectDir}/generated"

        generatedJavaDir = "${generatedRootDir}/main/java"
        generatedTestJavaDir = "${generatedRootDir}/test/java"

        generatedGrpcDir = "${generatedRootDir}/main/grpc"
        generatedTestGrpcDir = "${generatedRootDir}/test/grpc"

        generatedSpineDir = "${generatedRootDir}/main/spine"
        generatedTestSpineDir = "${generatedRootDir}/test/spine"
    }

    apply plugin: 'com.google.protobuf'
    apply plugin: 'net.ltgt.errorprone'
    apply plugin: 'io.spine.tools.spine-model-compiler'

    apply from: deps.scripts.javacArgs

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        jcenter()
        maven { url = repos.spine }
        maven { url = repos.spineSnapshots }
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        errorprone deps.build.errorProneCore
        errorproneJavac deps.build.errorProneJavac

        implementation "io.spine:spine-server:$spineVersion"
        implementation deps.build.slf4j
        implementation deps.build.jsr305Annotations
        implementation deps.build.guava

        testImplementation deps.test.hamcrest
        testImplementation "io.spine:spine-testutil-server:1.0.0-SNAPSHOT"
        testImplementation deps.test.guavaTestlib
        testImplementation deps.test.slf4j
    }

    sourceSets {
        main {
            proto.srcDirs = ["${sourcesRootDir}/main/proto"]
            java.srcDirs = [generatedJavaDir, generatedSpineDir, "${sourcesRootDir}/main/java"]
            resources.srcDirs = ["${generatedRootDir}/main/resources", "${sourcesRootDir}/main/resources"]
        }
        test {
            proto.srcDirs = ["${sourcesRootDir}/test/proto"]
            java.srcDirs = [generatedTestJavaDir, generatedTestSpineDir, "${sourcesRootDir}/test/java"]
            resources.srcDirs = ["${generatedRootDir}/test/resources", "${sourcesRootDir}/test/resources"]
        }
    }

    idea {
        module {
            sourceDirs += file(generatedJavaDir);
            sourceDirs += file(generatedGrpcDir);
            sourceDirs += file(generatedSpineDir);

            testSourceDirs += file(generatedTestJavaDir)
            testSourceDirs += file(generatedTestGrpcDir)
        }
    }

    idea.module.iml {
        beforeMerged { module ->
            module.dependencies.clear()
        }
        whenMerged { module ->
            module.dependencies*.exported = true
        }
    }

    javadoc {
        source = sourceSets.main.allJava
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        classifier "sources"
    }

    task testOutputJar(type: Jar) {
        from sourceSets.test.output
        classifier "test"
    }

    task javadocJar(type: Jar, dependsOn: 'javadoc') {
        from ("$projectDir/build/docs/javadoc")
        classifier "javadoc"
    }
}

apply from: deps.scripts.publish
apply from: deps.scripts.jacoco
